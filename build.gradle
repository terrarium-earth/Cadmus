import groovy.json.JsonOutput

plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.2-SNAPSHOT" apply false

    id "com.modrinth.minotaur" version "2.+"
    id "com.matthewprenger.cursegradle" version "1.4.0" // literally never gonna update
}

architectury {
    minecraft = minecraft_version
}

tasks.register("generateDiscordEmbed") {
    doFirst {
        var env = System.getenv()
        var changelogFile = file("changelog.txt")

        var fields = []

        if (changelogFile.exists()) {
            fields.add([
                    name : "Changelog",
                    value: changelogFile.text
            ])
        }

        fields.addAll([
                [
                        name  : "Minecraft Version",
                        value : minecraft_version,
                        inline: true
                ],
                [
                        name  : "Mod Version",
                        value : mod_version,
                        inline: true
                ],
                [
                        name  : "Download",
                        value : "<:modrinth:978684543034871878> [Modrinth](" +
                                env.MODRINTH_PROJECT_URL +
                                ")\n<:curseforge:978684543026462790> [Curseforge](" +
                                env.CURSE_PROJECT_URL + ")",
                        inline: true
                ]
        ])

        var json = JsonOutput.toJson([
                content     : null,
                embeds      : [[
                                       title    : archives_base_name,
                                       color    : Integer.parseInt(env.EMBED_COLOR, 16),
                                       fields   : fields,
                                       thumbnail: [url: env.WEBHOOK_THUMBNAIL]
                               ]],
                username    : env.WEBHOOK_USERNAME,
                avatar_url  : env.WEBHOOK_AVATAR,
                attatchments: []
        ])

        new File(projectDir, "embed.json").write(json)
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"

    archivesBaseName = archives_base_name
    version = mod_version
    group = maven_group

    repositories {
        maven {
            name = "JourneyMap (Public)"
            url = "https://jm.gserv.me/repository/maven-public/"
        }
        maven { url = "https://maven.resourcefulbees.com/repository/maven-public/" }
        maven {
            url = "https://api.modrinth.com/maven"
            content {
                includeGroup "maven.modrinth"
            }
        }
        maven {
            url = 'https://jitpack.io'
            content {
                includeGroup 'com.github.LlamaLad7'
                includeGroup 'com.github.llamalad7.mixinextras'
            }
        }
    }

    tasks.withType(JavaCompile).tap {
        configureEach {
            options.encoding = "UTF-8"
            options.release = 17
        }
    }

    java {
        withSourcesJar()
    }
}

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "com.modrinth.minotaur"
    apply plugin: "com.matthewprenger.cursegradle"
    apply plugin: "maven-publish"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${minecraft_version}"
        mappings loom.layered() {
            officialMojangMappings()
//            parchment("org.parchmentmc.data:parchment-minecraft_version:$rootProject.parchment_version@zip")
        }
        modApi "com.teamresourceful.resourcefullib:resourcefullib-$name-$minecraft_version:$resourcefullib_version"
    }

    var env = System.getenv()
    var modLoader = name

    var changelogFile = file("changelog.txt")
    var changelogText = changelogFile.exists() ? changelogFile.text : ""

    if (env.MODRINTH_TOKEN) {
        modrinth {
            projectId = modrinth_id
            uploadFile = tasks.remapJar
            gameVersions = [minecraft_version]
            loaders = [modLoader]
            changelog = changelogText
        }
    }

    if (env.CURSE_TOKEN) {
        curseforge {
            apiKey = env.CURSE_TOKEN
            project {
                id = curse_id
                changelog = changelogText
                releaseType = 'release'
                addGameVersion minecraft_version
                addGameVersion modLoader.capitalize()

                mainArtifact(tasks.remapJar)
            }
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifact remapJar
                artifact(sourcesJar) {
                    builtBy remapSourcesJar
                }

                artifactId = "$mod_id-$modLoader-$minecraft_version"

                pom {
                    name = github_name
                    description = ''
                    url = "https://github.com/terrarium-earth/$github_name"

                    scm {
                        connection = "git:https://github.com/terrarium-earth/${github_name}.git"
                        developerConnection = "git:https://github.com/terrarium-earth/${github_name}.git"
                        url = "https://github.com/terrarium-earth/$github_name"
                    }

                    licenses {
                        license {
                            name = 'MIT'
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                url = "https://maven.resourcefulbees.com/repository/terrarium/"
                credentials {
                    username env.MAVEN_USER
                    password env.MAVEN_PASS
                }
            }
        }
    }
}